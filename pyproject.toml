[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
line-length = 120
target-version = ["py39"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "pass",
    "if 0:",
    "if __name__ == .__main__.:",
    "nocov",
    "if TYPE_CHECKING:",
]
fail_under = 80
show_missing = true

[tool.coverage.run]
branch = true
omit = ["tests/*"]

[tool.isort]
combine_as_imports = "true"
force_grid_wrap = 0
include_trailing_comma = "true"
known_first_party = "src"
line_length = 120
multi_line_output = 3

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = false
strict_optional = false
ignore_missing_imports = true
disallow_any_unimported = false
check_untyped_defs = false
disallow_untyped_defs = false
no_implicit_optional = false
show_error_codes = false
warn_unused_ignores = false


[tool.poetry]
authors = ["Pokemonchik"]
description = ""
name = "tg-bot-admin"
version = "0.1.0"

[tool.poetry.dependencies]
python = "^3.12"
requests = "^2.28.1"
python-dateutil = "^2.8.2"
python-dotenv = "^0.21.0"
uvicorn = "^0.30.6"
loguru = "^0.7.2"
fastapi = "^0.115.0"
email-validator = "^2.2.0"
httpx = "^0.27.2"
sqlalchemy = "^2.0.35"
pydantic-settings = "^2.5.2"
asyncpg = "^0.29.0"
alembic = "^1.13.3"
dependency-injector = "^4.42.0"
nest-asyncio = "^1.6.0"
python-jose = "^3.3.0"
bcrypt = "4.0.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}


[tool.poetry.dev-dependencies]
bandit = "^1.7.4"
black = "^22.8"
flake8 = "^5.0.4"
ipython = "^8.5.0"
isort = "^5.10"
mypy = "^1.11.2"
openapi-spec-validator = "^0.5.1"
pre-commit = "^2.20"
pylint = "^2.15.3"
pytest = "^8.3.3"
pytest-cov = "^3.0.0"
responses = "^0.21.0"
toml-sort = "^0.20.1"
pytest-asyncio = "^0.24.0"


[tool.pylint.BASIC]
good-names = "id,i,j,k"

[tool.pylint.DESIGN]
max-args = 5
max-attributes = 8
min-public-methods = 1

[tool.pylint.FORMAT]
max-line-length = 120

[tool.pylint."MESSAGES CONTROL"]
disable = "missing-docstring, line-too-long, logging-fstring-interpolation, duplicate-code"

[tool.pylint.MISCELLANEOUS]
notes = "XXX"

[tool.pylint.SIMILARITIES]
ignore-comments = "yes"
ignore-docstrings = "yes"
ignore-imports = "yes"
min-similarity-lines = 6

[tool.pytest.ini_options]
asyncio_mode = "auto"
# addopts = "-v --cov=src --cov-report term-missing --no-cov-on-fail -p no:warnings"
addopts = "-v  -p no:warnings"
testpaths = ["tests"]
